CRM项目的核心业务
	系统管理功能：不是直接处理业务数据，为了保证业务管理的功能正常安全运行而设计的功能。
			  用户登录，安全退出，登录验证等
			  给超级管理员，开发和运维人员使用。
	业务管理功能：处理业务数据
			  市场活动：设计一些市场营销活动
			  线索：销售部（初级销售），增加线索
			  客户和联系人：销售部（高级销售），有效地区分和跟踪客户和联系人
			  交易：销售部（高级销售），更好地区分和统计交易的各个阶段
			  售后回访：客服部，妥善安排售后回访。主动提醒。
			  统计图表：管理层，统计交易的各个阶段数据量
CRM项目数据库表的设计
	tbl_user	用户表
	
	tbl_dic_type	数据字典类型（存储下拉列表的类型）
	tbl_dic_value	数据字典值（存下拉列表中的值）
	
	tbl_activity	市场活动表
	tbl_activity_remark	市场活动备注表（对市场活动的评论）
	
	tbl_clue	线索表
	tbl_clue_remark	线索备注表
	
	tbl_customer	客户表
	tbl_customer_remark	客户备注表
	
	tbl_contacts	联系人表
	tbl_contacts_remark	联系人备注表
	
	tbl_tran	交易表
	tbl_tran_remark	交易备注表
	tbl_tran_history	交易历史表
	
	1）主键字段：数据库表中，如果有一组字段能够唯一确定一条记录，则可以把它们设计成表的主键
			 推进使用一个字段做主键，而且推荐使用没有业务含义的字段做主键。id
			 
			 主键字段的类型和长度由主键值生成方式决定：
			 	主键值的生产方式：
			 		1）自增：借助数据库自身主键生成机制
			 			   数值型 长度由数据量来决定
					   特点：
			 			   效率低，开发效率高，方便。
	 			    2）assigned：程序员自己手动生成主键值，唯一非空，算法。
	 			    		hi/low：数值型 长度由数据量决定
	 			    		uuid：字符串 长度是32位（最常用）
    		 主键类型和长度一般定义成：id char(32) primary key
 	2）外键字段：用来确定表和表之间的关系
 			一对多：一张表（A）的一条记录对应另一张表的（B）中的多条记录
	3）给关于日期的时间的字段：都按照字符串来处理
		Date
		
		date：年月日
		time：时分秒
		datetime：年月日时分秒
		
		char(10):yyyy-MM-dd
		char(19):yyyy-MM-dd HH:mm:ss
		
		
模态窗口
	模态窗口，本质上是div，通过设置z-index大小来实现的；
	初始时，z-index初始值是<0的，所以不显示
	需要显示的时候，z-index设置成>0即可
	
	bootstrap来控制z-index的大小
	
	控制模态窗口的显示和隐藏
		1）方式1：通过data-toggle="modal" data-target="#div的id值"
		2）方式2：通过js代码
				选择器(选中div).modal("show"|"hide");显示或者隐藏选中div对应的模态窗口
		3）方式3：通过标签的属性data-dismiss="modal";
				这个标签一般是在存在于一个模态窗口中的，
				单击这个标签就会关闭当前这个模态窗口
 			
创建市场活动
	提交保存Ajax请求：
		uri:"/workbench/activity/create/save"
		将表单的数据以json格式返回给后端Controller
		Controller调用Service层插入activity
		Controller返回相应信息
		前端js代码，处理相应结果
		
		
		前端插件的使用步骤
			1.引入开发包
			2。把开发包加入到你的项目中
			3.把开发包引入到jsp文件中
			4.创建容器，<input type="text"> <div>两种容器是最多的
			5.当容器加载完后，对容器调用工具函数
			
		使用java生成excel文件
			io写数据，只能写无格式文件，没有行、列、颜色等等，使用插件
				iText(收费...)、apache-poi(apache开源)
				关于办公文档插件使用的基本思想：把办公文档的所有元素封装成普通的java类，
										程序员通过操作这些来达到操作办公文档的目的
				文件--------HSSFWorkbook
				页---------HSSFSheet
				行---------HSSFRow
				列---------HSSFCell
				样式--------HSSFCellStyle
		文件下载
 			